plugins {
    id 'java'
    id 'io.freefair.lombok' version '8.4'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
    id "org.ajoberstar.reckon" version "0.18.1"
    id "com.diffplug.spotless" version "6.23.3"
    id "io.papermc.paperweight.userdev" version "1.5.11"
}

group 'io.github.metriximor'

reckon {
    defaultInferredScope = "minor"
    snapshots()
    scopeCalc = calcScopeFromProp()
    stageCalc = calcStageFromProp()
}

shadowJar {
    manifest {
        attributes 'Implementation-Title': project.name,
                'Implementation-Version': project.version
    }
    relocate 'co.aikar.commands', 'io.github.metriximor.civsimbukkit.acf'
    relocate 'co.aikar.locales', 'io.github.metriximor.civsimbukkit.locales'
    relocate 'com.jeff_media.morepersistentdatatypes', 'io.github.metriximor.civsimbukkit.morepersistentdatatypes'
}

repositories {
    mavenCentral()
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
    maven { url 'https://repo.xenondevs.xyz/releases' }
    maven { url 'https://hub.jeff-media.com/nexus/repository/jeff-media-public/' }
    maven { url "https://repo.aikar.co/content/groups/aikar/" }
    maven { url "https://maven.enginehub.org/repo/" }
    maven { url 'https://jitpack.io' }
}

dependencies {
    // Minecraft
    //noinspection VulnerableLibrariesLocal
    paperweight.paperDevBundle("1.18.2-R0.1-SNAPSHOT")
    compileOnly(testImplementation("io.papermc.paper:paper-api:1.18.2-R0.1-SNAPSHOT"))

    implementation 'com.jeff_media:MorePersistentDataTypes:2.4.0'
    testImplementation 'com.jeff_media:MorePersistentDataTypes:2.4.0'

    // GUI
    implementation "xyz.xenondevs.invui:invui:1.24"

    // Commands
    implementation 'co.aikar:acf-paper:0.5.1-SNAPSHOT'

    // Testing
    testImplementation "org.mockito:mockito-core:3.+"
    testImplementation 'org.junit.jupiter:junit-jupiter:5.8.1'
    testImplementation 'com.github.TutelleMC:MockBukkit:3a3114c664'
}

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

processResources {
    def props = [version: version.toString()]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}

test {
    useJUnitPlatform()
}

spotless {
    format 'misc', {
        target '*.gradle', '*.gitattributes', '*.gitignore', '*.yml'

        trimTrailingWhitespace()
        indentWithSpaces()
        endWithNewline()
    }
    java {
        importOrder()
        removeUnusedImports()
        cleanthat().addMutator("SafeAndConsensual")


        palantirJavaFormat()
        indentWithSpaces()
    }
}
build.dependsOn spotlessApply, shadowJar

compileJava {
    options.compilerArgs += ["-parameters"]
}

tasks.register('name') {
    println project.name
}

tasks.register('proj_version') {
    println project.version
}
